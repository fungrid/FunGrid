package  {		import flash.display.MovieClip;	import no.agens.fungrid.KeyboardControlledPhysicsGameObject;	import flash.geom.Point;	import flash.events.Event;	import flash.geom.Rectangle;	import no.agens.fungrid.FunGrid;	import no.agens.fungrid.PolyLineGameObject;	import no.agens.fungrid.PolyLine;	import no.agens.fungrid.RepeatSettings;	import no.agens.fungrid.ParticleGameObject;			public class PhysicsAndKeyboardMain extends MovieClip {		var funGrid:FunGrid;		var monster:KeyboardControlledPhysicsGameObject;		public function PhysicsAndKeyboardMain() {						// Create FunGrid and define viewport			funGrid = new FunGrid(this, new Rectangle(0,0,550,400));						// Add repeating brick platforms			var platform1:PolyLineGameObject = new PolyLineGameObject("platform1", new PlatformMovieClip(), new Point(-150,100), new PolyLine(new Point(0,0), new Point(300,0)),null,false);			platform1.repeatSettings = new RepeatSettings(900,undefined,undefined,500);			funGrid.addGameObject(platform1);						var platform2:PolyLineGameObject = new PolyLineGameObject("platform2", new PlatformMovieClip(), new Point(150,200), new PolyLine(new Point(0,0), new Point(300,0)),null,false);			platform2.repeatSettings = new RepeatSettings(900,undefined,undefined,500);			funGrid.addGameObject(platform2);						var platform3:PolyLineGameObject = new PolyLineGameObject("platform3", new PlatformMovieClip(), new Point(-450,300), new PolyLine(new Point(0,0), new Point(300,0)),null,false);			platform3.repeatSettings = new RepeatSettings(900,undefined,undefined,500);			funGrid.addGameObject(platform3);						// Add a arrow key controlled monster			// PhysicsGameObjects collide and moves on PolyLineGameObjects			monster = new KeyboardControlledPhysicsGameObject(this.stage,"monster",new MonsterMovieClip(),new Point(0,0));			monster.acceleration.y = 0.6;			funGrid.addGameObject(monster);						// Add a moving PolyLine planet with repeat settings.			var planet:PolyLineGameObject = new PolyLineGameObject("planet", new PlanetMovieClip(), new Point(900,150), new PolyLine(new Point(0,70), new Point(70,20), new Point(140,20),new Point(210,70)));			planet.speed.x = 2;			planet.speed.y = 1;			planet.repeatSettings = new RepeatSettings(1200,undefined,undefined,1000);			funGrid.addGameObject(planet);						// Call gameLoop on every frame			addEventListener(Event.ENTER_FRAME, gameLoop);		}		private function gameLoop(e:Event):void {			// If the monster is not on a platform (PolyLineGameObject - plgo), lets add some particles:			if (!monster.plgo) {				funGrid.addGameObject(new ParticleGameObject("particle", new ParticleMovieClip(), new Point(monster.pos.x,monster.pos.y-10), new Point(Math.random()*10-5, Math.random()*10-5), new Point(0,1),50,true));			}			// Let the viewport follow the monster:			funGrid.setFutureViewportCenter(monster.pos.x,monster.pos.y);			// Update FunGrid			funGrid.update();		}	}	}