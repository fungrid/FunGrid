package no.agens.fungrid.esound {	import flash.media.Sound;	import flash.media.SoundTransform;	import flash.media.SoundMixer;		// TODO:	// - Legg til playlist-funksjonalitet	// - Legg til innlasting og streaming-funksjonalitet		public class EasySoundManager {		public var mute:Boolean=false;		// Lyder		public var eSounds:Vector.<EasySound>;				private var playAllIndex:uint;		public function EasySoundManager(mute:Boolean=false) {			this.mute = mute;			eSounds = new Vector.<EasySound>();			customInit();		}		public function addSound(snd:Sound, title:String):EasySound {			if (soundFromTitle(title, false)==null) {				eSounds.push(new EasySound(snd, title));				return eSounds[eSounds.length-1];			}			trace("Warning! Sound with title '"+title+"' already exist in the EasySoundManager!");			return null;		}		public function soundFromTitle(title:String, warning:Boolean=true):EasySound {			for (var i:uint = 0; i<eSounds.length; i++) {				if (eSounds[i].title==title) {					return eSounds[i];				}			}			if (warning) {				trace("Error in EasySoundManager.soundFromTitle(...) - No sound with title '"+title+"'!");			}			return null;		}		public function isPlaying(title:String):Boolean {			return soundFromTitle(title).isPlaying;		}		public function playAllSounds():void {			trace("playAllSounds()...");			playAllIndex = 0;			playNext();					}		private function playNext():void {			if (eSounds.length>playAllIndex) {				trace("Playing '"+eSounds[playAllIndex].title+"' ...");				playSoundOnceAndCallFunction(eSounds[playAllIndex].title, playNext);				playAllIndex +=1;			} else {				trace("'Play all' completed!");			}		}		public function playSound(title:String, startTime:Number = 0, loops:int = 0, vol:Number=1, panning:Number=0):void {			if (!mute) {				var es:EasySound = soundFromTitle(title);				if (es!=null) {					es.play(startTime, loops, new SoundTransform(vol, panning));				} else {					trace("Error in EasySoundManager.playSound(...) - No sound with title '"+title+"'!");				}			}		}		public function delayAndPlaySound(title:String, framesDelay:uint, startTime:Number = 0, loops:int = 0, vol:Number=1, panning:Number=0):void {			if (!mute) {				var es:EasySound = soundFromTitle(title);				if (es!=null) {					es.delayAndPlay(framesDelay, startTime, loops, new SoundTransform(vol, panning));				} else {					trace("Error in EasySoundManager.delayAndPlaySound(...) - No sound with title '"+title+"'!");				}			}		}		public function cancelDelayAndPlaySound(title:String, cancelPlay:Boolean = false, fadeFrames:uint = 0):void {				var es:EasySound = soundFromTitle(title);				if (es!=null) {					es.cancelDelayAndPlay(cancelPlay, fadeFrames);				} else {					trace("Error in EasySoundManager.cancelDelayAndPlaySound(...) - No sound with title '"+title+"'!");				}		}		public function fadeIn(title:String, frames:uint, startTime:Number = 0, loops:int = 0, vol:Number=1, panning:Number=0):void {			playSound(title, startTime, loops, 0.01, panning);			fadeVolume(title,vol,frames);		}		// Fader lyden på fem frames dersom den alt spiller, for å ungå dobbelspilling		public function fadeAndPlaySound(title:String, startTime:Number = 0, loops:int = 0, vol:Number=1, panning:Number=0, frames:uint=5):void {			if (soundFromTitle(title).isPlaying) {				fadeOut(title,frames);			}			playSound(title, startTime, loops, vol, panning);		}		public function playSoundIfNotPlaying(title:String, startTime:Number = 0, loops:int = 0, vol:Number=1, panning:Number=0):void {			if (!soundFromTitle(title).isPlaying) {				playSound(title, startTime, loops, vol, panning);			}		}		public function playSoundOnceAndCallFunction(title:String, onCompleteFunction:Function, startTime:Number = 0, vol:Number=1, panning:Number=0):void {				if (mute) {					vol = 0;				}				var es:EasySound = soundFromTitle(title);				if (es!=null) {					es.playOnceAndCallFunctionOnComplete(startTime, new SoundTransform(vol, panning), onCompleteFunction);				} else {					trace("Error in EasySoundManager.playSoundOnceAndCallFunction(...) - No sound with title '"+title+"'!");				}		}		public function fadeOut(title:String, frames:uint):void {			var es:EasySound = soundFromTitle(title);			if (es!=null) {				es.fadeOut(frames);			} else {				trace("Feil på EasySoundManager.fadeOut(...) - No sound with title '"+title+"'!");			}		}		public function fadeVolume(title:String, volume:Number, frames:uint):void {			var es:EasySound = soundFromTitle(title);			if (es!=null) {				es.fadeVolume(volume, frames);			} else {				trace("Feil på EasySoundManager.fadeVolume(...) - No sound with title '"+title+"'!");			}		}		public function setVolum(title:String, volume:Number):void {			var es:EasySound = soundFromTitle(title);			if (es!=null) {				es.setVolume(volume);			} else {				trace("Feil på EasySoundManager.setVolume(...) - No sound with title '"+title+"'!");			}		}		public function stopSound(title:String):void {			var es:EasySound = soundFromTitle(title);			if (es!=null) {				es.stop();			} else {				trace("Feil på EasySoundManager.stopSound(...) - No sound with title '"+title+"'!");			}		}		public function toggleMute():void {			mute = !mute;			if (mute) {				doMute();			} else {				unMute();			}		}		public function unMute():void {			mute = false;			// Restart eventuelt lyder her		}		public function doMute():void {			mute = true;			SoundMixer.stopAll();		}		protected function customInit():void {			// Putt inn eventuelle egne greier her		}	}}