package no.agens.fungrid{	import flash.display.BitmapData;	import flash.geom.Rectangle;	import flash.geom.Point;		public class BlitParticleGameObject extends BlitCoreGameObject {		public var updateCounter:uint = 0;		public var dieAfterUpdates:uint;		public var dieOutsideOfViewport:Boolean;		public var dieOutsideOfRectangle:Rectangle;		/** Rotation speed for displayObject. Measured in degrees pr update (frame) */		public function BlitParticleGameObject(id:String,spriteSheet:BitmapData, spriteRects:Vector.<Rectangle>, initPos:Point, scrollFactor:Point=null, animateSprites:Boolean = false, initSpeed:Point=null, initAcceleration:Point=null, dieAfterUpdates:uint = 0, dieOutsideOfViewport:Boolean = false, dieOutsideOfRectangle:Rectangle = null) {			super(id, spriteSheet, spriteRects, initPos, scrollFactor, animateSprites, true, initSpeed, initAcceleration);			this.dieAfterUpdates = dieAfterUpdates;			this.dieOutsideOfViewport = dieOutsideOfViewport;			this.dieOutsideOfRectangle = dieOutsideOfRectangle;		}		/** Updates the position on the grid and the DisplayObjects position in the viewport, and then render... */		override public function update():Boolean {			if (destroyMe) {				return false;			}			customEarlyUpdate();			if (moveable) {				updateSpeed();				updateGridPosition();			}			customLateUpdate();			updateRenderPositon();			customSuperlateUpdate();			render();						return true;		}		override protected function customEarlyUpdate():void {			updateCounter +=1;			if (dieAfterUpdates>0) {				if (updateCounter >= dieAfterUpdates) {					pleaseDestroy();				}			}		}		override protected function customLateUpdate():void {			if (dieOutsideOfRectangle) {				if (!dieOutsideOfRectangle.containsPoint(pos)) {					pleaseDestroy();				}			}		}		protected function customSuperlateUpdate():void {			// displayObject.rotation += rotationSpeed;			if (dieOutsideOfViewport) {				if (!inViewport()) {					pleaseDestroy();				}			}		}			}	}