package no.agens.fungrid{	import flash.display.Sprite;	import flash.geom.Point;	/*	Copyright (c) 2011, Agens AS <post@agens.no> http://agens.no		Permission to use, copy, modify, and/or distribute this software for any	purpose with or without fee is hereby granted, provided that the above	copyright notice and this permission notice appear in all copies.		THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES	WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF	MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR	ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES	WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN	ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF	OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.	*/	/**	 * <h1>ZoneGameObject</h1>	 * <p>GameObject on the FunGrid containing a closed PolyLine for checking if a point is inside or outside of the zone. Usually used to define zones on the GameGrid.</p>	 * 	 * Usage: Create and place it on the FunGrid!	 * 	 * @author Peter Måseide, Agens AS	 * @date 23. mar. 2011	 */	public class ZoneGameObject extends GameObject {		/** A closed PolyLine */		public var polyLine:PolyLine;		/** If false no collision will occur */		public var zoneEnabled:Boolean = true;		/** If the zone should be drawn on the sprite (for debugging) */		public static var drawPolyLines:Boolean = false;		/**		 * Constructor 		 * @param id A string you can use to identify the ZGO		 * @param sprite The visual part of the ZGO. Is added to baseSprite on FunGrid when ZGO is added to the FunGrid		 * @param pos Positon for the ZGO on the FunGrid		 * @param polyLine The Polyline defining the zone		 * @param scrollFactor How the ZGO follows GameGrid.baseSprite when scrolling. (Default: x:1 y:1 - Use values below 1 to scroll backgrounds slower, and values above 1 to scroll things in the foreground faster.)		 * @param moveable True if this ZGO is supposed to move on the GameGrid with speed/acceleration		 * @param repeatSettings Repeat settings		 * @param speed x and y speed of the GO on the GameGrid. Measured in pixels pr update (frame)		 * @param acc x and y acceleration of the GO on the GameGrid. Measures change in speed in pixels pr update (frame).		 * 		 */				public function ZoneGameObject(id:String,sprite:Sprite,pos:Point,polyLine:PolyLine,scrollFactor:Point=null, moveable:Boolean = true, repeatSettings:GameObjectRepeatSettings=null, speed:Point=null, acc:Point=null) {			super(id,sprite,pos,scrollFactor,moveable, repeatSettings, speed, acc);			this.polyLine = polyLine;			if (!polyLine.isClosed()) {				polyLine.close();			}			if (drawPolyLines) {				polyLine.draw(this.sprite);			}		}		/**		 * True if the polyLine contains the Point		 * @param p		 * @param type May be used for collision checking. The ZGO may take spesific action at spesific types.		 * @return 		 * 		 */				public function containsPoint(p:Point, type:String=""):Boolean {			if (!zoneEnabled) {				return false;			}			var cp:Boolean = polyLine.containsPoint(new Point(p.x-pos.x, p.y-pos.y));			if (cp) {				customIfContainsPoint(type);			}			return cp;		}		/** Your own custom actions if polyLine contains the Point */		protected function customIfContainsPoint(type:String=""):void {		}	}}